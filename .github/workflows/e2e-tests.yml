name: E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: webcrawler
          MYSQL_USER: webcrawler
          MYSQL_PASSWORD: webcrawler123
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Start Vite dev server
        run: npm run dev &
      - name: Wait for Vite to be ready
        run: npx wait-on https://180e7ee86b80.ngrok-free.app/
      # - name: Run Cypress tests
      #   run: npx cypress run --no-progress

  e2e-tests-parallel:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        spec:
          - cypress/e2e/authentication.cy.ts
          - cypress/e2e/dashboard.cy.ts
          - cypress/e2e/crawl-details.cy.ts
          - cypress/e2e/user-journey.cy.ts
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: webcrawler
          MYSQL_USER: webcrawler
          MYSQL_PASSWORD: webcrawler123
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"
      - name: Download Go dependencies
        run: go mod download
      - name: Build backend
        run: go build -o main .
      - name: Start backend
        run: |
          export DB_HOST=localhost
          export DB_PORT=3306
          export DB_USER=webcrawler
          export DB_PASSWORD=webcrawler123
          export DB_NAME=webcrawler
          export JWT_SECRET=your-secret-key
          export JWT_REFRESH_SECRET=your-refresh-secret-key
          export PORT=8090
          ./main &
          sleep 10
        env:
          DB_HOST: localhost
          DB_PORT: 3306
          DB_USER: webcrawler
          DB_PASSWORD: webcrawler123
          DB_NAME: webcrawler
          JWT_SECRET: your-secret-key
          JWT_REFRESH_SECRET: your-refresh-secret-key
          PORT: 8090
      - name: Wait for backend to be ready
        run: |
          for i in {1..30}; do
            if curl -f http://localhost:8090/health; then
              echo "Backend is ready!"
              break
            fi
            echo "Waiting for backend... ($i/30)"
            sleep 2
          done
      - name: Start frontend
        run: npm run dev &
        env:
          VITE_API_BASE_URL: http://localhost:8090/api
      - name: Wait for frontend to be ready
        run: |
          for i in {1..30}; do
            if curl -f http://localhost:3000; then
              echo "Frontend is ready!"
              break
            fi
            echo "Waiting for frontend... ($i/30)"
            sleep 2
          done
      # - name: Run Cypress tests
      #   uses: cypress-io/github-action@v6
      #   with:
      #     browser: chrome
      #     record: false
      #     config: baseUrl=http://localhost:3000
      #     spec: ${{ matrix.spec }}
      #     wait-on: "http://localhost:3000"
      #     wait-on-timeout: 120
      # - name: Upload screenshots
      #   uses: actions/upload-artifact@v4
      #   if: failure()
      #   with:
      #     name: cypress-screenshots-${{ matrix.spec }}
      #     path: cypress/screenshots
      #     if-no-files-found: ignore
      # - name: Upload videos
      #   uses: actions/upload-artifact@v4
      #   if: always()
      #   with:
      #     name: cypress-videos-${{ matrix.spec }}
      #     path: cypress/videos
      #     if-no-files-found: ignore
